{"version":3,"file":"main.4cc5c1b04a6a37da4748.hot-update.js","mappings":"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","sources":["webpack://mediaserver/./wwwroot/source/screens/admin/ManageMedia.jsx","webpack://mediaserver/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  CircularProgress,\r\n  Fade,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@mui/material\";\r\nimport { Delete, ExpandMore } from \"@mui/icons-material\";\r\nimport axiosInstance from \"../../axiosConfig\";\r\nimport { UserContext } from \"../../UserContext\";\r\nimport MovieCard from \"../../components/MovieCard\";\r\n\r\nexport default function ManageMedia() {\r\n  const { userId, role } = useContext(UserContext); // Assume role indicates \"Admin\"\r\n  const [mediaItems, setMediaItems] = useState([]);\r\n  const [seriesDetails, setSeriesDetails] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState({\r\n    open: false,\r\n    type: \"\", // \"media\", \"season\", \"episode\"\r\n    id: null,\r\n    title: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (role !== \"Admin\") {\r\n      setError(\"Unauthorized access. Admin role required.\");\r\n      return;\r\n    }\r\n\r\n    const fetchMedia = async () => {\r\n      setLoading(true);\r\n      setError(\"\");\r\n\r\n      try {\r\n        const response = await axiosInstance.get(\"/Admin/GetMedia\");\r\n        setMediaItems(response.data);\r\n\r\n        // Fetch details for series\r\n        const series = response.data.filter(\r\n          (item) => item.type?.toLowerCase() === \"series\"\r\n        );\r\n        const detailsPromises = series.map((item) =>\r\n          axiosInstance.get(\"/Admin/GetMediaDetails\", {\r\n            params: { mediaId: item.mediaId },\r\n          })\r\n        );\r\n        const detailsResponses = await Promise.all(detailsPromises);\r\n        const detailsMap = {};\r\n        detailsResponses.forEach((res, index) => {\r\n          detailsMap[series[index].mediaId] = res.data;\r\n        });\r\n        setSeriesDetails(detailsMap);\r\n      } catch (err) {\r\n        setError(err.response?.data?.error || \"Failed to fetch media\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMedia();\r\n  }, [role]);\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const { type, id } = deleteDialog;\r\n      if (type === \"media\") {\r\n        await axiosInstance.post(`/Admin/DeleteMedia`,{});\r\n      } else if (type === \"season\") {\r\n        await axiosInstance.post(`/Admin/DeleteSeason/${id}`);\r\n      } else if (type === \"episode\") {\r\n        await axiosInstance.post(`/Admin/DeleteEpisode/${id}`);\r\n      }\r\n      // Refresh media list\r\n      const response = await axiosInstance.get(\"/User/GetMedia\");\r\n      setMediaItems(response.data);\r\n      const series = response.data.filter(\r\n        (item) => item.type?.toLowerCase() === \"series\"\r\n      );\r\n      const detailsPromises = series.map((item) =>\r\n        axiosInstance.get(\"/User/GetMediaDetails\", {\r\n          params: { mediaId: item.mediaId },\r\n        })\r\n      );\r\n      const detailsResponses = await Promise.all(detailsPromises);\r\n      const detailsMap = {};\r\n      detailsResponses.forEach((res, index) => {\r\n        detailsMap[series[index].mediaId] = res.data;\r\n      });\r\n      setSeriesDetails(detailsMap);\r\n      setDeleteDialog({ open: false, type: \"\", id: null, title: \"\" });\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || \"Failed to delete item\");\r\n      setDeleteDialog({ open: false, type: \"\", id: null, title: \"\" });\r\n    }\r\n  };\r\n\r\n  const openDeleteDialog = (type, id, title) => {\r\n    setDeleteDialog({ open: true, type, id, title });\r\n  };\r\n\r\n  const closeDeleteDialog = () => {\r\n    setDeleteDialog({ open: false, type: \"\", id: null, title: \"\" });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Fade in={loading} timeout={400}>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            minHeight: \"100vh\",\r\n            bgcolor: \"background.default\",\r\n          }}\r\n        >\r\n          <CircularProgress sx={{ color: \"primary.main\", mb: 2 }} />\r\n          <Typography\r\n            variant=\"body1\"\r\n            sx={{ color: \"text.secondary\", fontWeight: 500 }}\r\n          >\r\n            Loading media...\r\n          </Typography>\r\n        </Box>\r\n      </Fade>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Fade in={!!error} timeout={400}>\r\n        <Box\r\n          sx={{\r\n            bgcolor: \"rgba(255, 75, 75, 0.1)\",\r\n            border: \"1px solid rgba(255, 75, 75, 0.3)\",\r\n            borderRadius: 2,\r\n            p: 2,\r\n            m: 3,\r\n            textAlign: \"center\",\r\n            maxWidth: \"600px\",\r\n            mx: \"auto\",\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"body1\"\r\n            sx={{ color: \"error.main\", fontWeight: 500 }}\r\n          >\r\n            {error}\r\n          </Typography>\r\n        </Box>\r\n      </Fade>\r\n    );\r\n  }\r\n\r\n  const movies = mediaItems.filter(\r\n    (item) => item.type?.toLowerCase() === \"movie\"\r\n  );\r\n  const series = mediaItems.filter(\r\n    (item) => item.type?.toLowerCase() === \"series\"\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: \"100vh\",\r\n        bgcolor: \"background.default\",\r\n        py: { xs: 3, sm: 4 },\r\n        px: { xs: 2, sm: 3, md: 4 },\r\n      }}\r\n    >\r\n      <Fade in timeout={600}>\r\n        <Box>\r\n          <Typography\r\n            variant=\"h3\"\r\n            sx={{\r\n              fontWeight: 700,\r\n              color: \"text.primary\",\r\n              mb: 4,\r\n              letterSpacing: \"-0.025em\",\r\n            }}\r\n          >\r\n            Admin Media Management\r\n          </Typography>\r\n\r\n          {/* Movies Section */}\r\n          <Box sx={{ mb: 6 }}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              sx={{\r\n                fontWeight: 700,\r\n                color: \"text.primary\",\r\n                mb: 3,\r\n                letterSpacing: \"-0.025em\",\r\n              }}\r\n            >\r\n              Movies\r\n            </Typography>\r\n            <Grid container spacing={{ xs: 2, sm: 3 }}>\r\n              {movies.length > 0 ? (\r\n                movies.map((item) => (\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} key={item.mediaId}>\r\n                    <Box sx={{ position: \"relative\" }}>\r\n                      <MovieCard\r\n                        title={item.title || \"No title\"}\r\n                        description={item.description || \"-\"}\r\n                        posterUrl={\r\n                          item.thumbnailPath ? `/${item.thumbnailPath}` : \"\"\r\n                        }\r\n                        trailerUrl={\r\n                          item.trailerPath ? `/${item.trailerPath}` : \"\"\r\n                        }\r\n                        mediaId={item.mediaId}\r\n                      />\r\n                      <IconButton\r\n                        sx={{\r\n                          position: \"absolute\",\r\n                          top: 8,\r\n                          right: 8,\r\n                          bgcolor: \"rgba(0,0,0,0.6)\",\r\n                          color: \"error.main\",\r\n                          \"&:hover\": { bgcolor: \"rgba(0,0,0,0.8)\" },\r\n                        }}\r\n                        onClick={() =>\r\n                          openDeleteDialog(\"media\", item.mediaId, item.title)\r\n                        }\r\n                        aria-label={`Delete ${item.title}`}\r\n                      >\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </Grid>\r\n                ))\r\n              ) : (\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  sx={{ color: \"text.secondary\", ml: 2 }}\r\n                >\r\n                  No movies found.\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n          </Box>\r\n\r\n          {/* Series Section */}\r\n          <Box>\r\n            <Typography\r\n              variant=\"h4\"\r\n              sx={{\r\n                fontWeight: 700,\r\n                color: \"text.primary\",\r\n                mb: 3,\r\n                letterSpacing: \"-0.025em\",\r\n              }}\r\n            >\r\n              Series\r\n            </Typography>\r\n            {series.length > 0 ? (\r\n              series.map((item) => (\r\n                <Box key={item.mediaId} sx={{ mb: 4 }}>\r\n                  <Box sx={{ position: \"relative\", mb: 2 }}>\r\n                    <Grid container spacing={{ xs: 2, sm: 3 }}>\r\n                      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <MovieCard\r\n                          title={item.title || \"No title\"}\r\n                          description={item.description || \"-\"}\r\n                          posterUrl={\r\n                            item.thumbnailPath ? `/${item.thumbnailPath}` : \"\"\r\n                          }\r\n                          trailerUrl={\r\n                            item.trailerPath ? `/${item.trailerPath}` : \"\"\r\n                          }\r\n                          mediaId={item.mediaId}\r\n                        />\r\n                        <IconButton\r\n                          sx={{\r\n                            position: \"absolute\",\r\n                            top: 8,\r\n                            right: 8,\r\n                            bgcolor: \"rgba(0,0,0,0.6)\",\r\n                            color: \"error.main\",\r\n                            \"&:hover\": { bgcolor: \"rgba(0,0,0,0.8)\" },\r\n                          }}\r\n                          onClick={() =>\r\n                            openDeleteDialog(\"media\", item.mediaId, item.title)\r\n                          }\r\n                          aria-label={`Delete ${item.title}`}\r\n                        >\r\n                          <Delete />\r\n                        </IconButton>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                  {seriesDetails[item.mediaId]?.seasons?.length > 0 && (\r\n                    <Accordion\r\n                      sx={{\r\n                        bgcolor: \"background.paper\",\r\n                        borderRadius: 2,\r\n                        border: \"1px solid rgba(255, 255, 255, 0.1)\",\r\n                      }}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={\r\n                          <ExpandMore sx={{ color: \"text.primary\" }} />\r\n                        }\r\n                        aria-controls={`panel-${item.mediaId}-content`}\r\n                        id={`panel-${item.mediaId}-header`}\r\n                      >\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          sx={{ color: \"text.primary\", fontWeight: 600 }}\r\n                        >\r\n                          Seasons\r\n                        </Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        {seriesDetails[item.mediaId].seasons.map((season) => (\r\n                          <Box key={season.seasonId} sx={{ mb: 3 }}>\r\n                            <Box\r\n                              sx={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                mb: 2,\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                variant=\"h6\"\r\n                                sx={{ color: \"text.primary\", flexGrow: 1 }}\r\n                              >\r\n                                {season.title ||\r\n                                  `Season ${season.seasonNumber}`}\r\n                              </Typography>\r\n                              <IconButton\r\n                                sx={{\r\n                                  color: \"error.main\",\r\n                                  \"&:hover\": {\r\n                                    bgcolor: \"rgba(255, 75, 75, 0.1)\",\r\n                                  },\r\n                                }}\r\n                                onClick={() =>\r\n                                  openDeleteDialog(\r\n                                    \"season\",\r\n                                    season.seasonId,\r\n                                    season.title ||\r\n                                      `Season ${season.seasonNumber}`\r\n                                  )\r\n                                }\r\n                                aria-label={`Delete ${\r\n                                  season.title ||\r\n                                  `Season ${season.seasonNumber}`\r\n                                }`}\r\n                              >\r\n                                <Delete />\r\n                              </IconButton>\r\n                            </Box>\r\n                            <Grid container spacing={1.5}>\r\n                              {season.episodes.map((episode) => (\r\n                                <Grid\r\n                                  item\r\n                                  xs={12}\r\n                                  sm={6}\r\n                                  md={4}\r\n                                  lg={3}\r\n                                  key={episode.episodeId}\r\n                                >\r\n                                  <Box\r\n                                    sx={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                      bgcolor: \"rgba(255, 255, 255, 0.05)\",\r\n                                      borderRadius: 2,\r\n                                      p: 1,\r\n                                    }}\r\n                                  >\r\n                                    <Typography\r\n                                      variant=\"body2\"\r\n                                      sx={{\r\n                                        color: \"text.primary\",\r\n                                        flexGrow: 1,\r\n                                        overflow: \"hidden\",\r\n                                        textOverflow: \"ellipsis\",\r\n                                      }}\r\n                                    >\r\n                                      {episode.title ||\r\n                                        `Episode ${episode.episodeNumber}`}\r\n                                    </Typography>\r\n                                    <IconButton\r\n                                      sx={{\r\n                                        color: \"error.main\",\r\n                                        \"&:hover\": {\r\n                                          bgcolor: \"rgba(255, 75, 75, 0.1)\",\r\n                                        },\r\n                                      }}\r\n                                      onClick={() =>\r\n                                        openDeleteDialog(\r\n                                          \"episode\",\r\n                                          episode.episodeId,\r\n                                          episode.title ||\r\n                                            `Episode ${episode.episodeNumber}`\r\n                                        )\r\n                                      }\r\n                                      aria-label={`Delete ${\r\n                                        episode.title ||\r\n                                        `Episode ${episode.episodeNumber}`\r\n                                      }`}\r\n                                    >\r\n                                      <Delete />\r\n                                    </IconButton>\r\n                                  </Box>\r\n                                </Grid>\r\n                              ))}\r\n                            </Grid>\r\n                          </Box>\r\n                        ))}\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  )}\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <Typography\r\n                variant=\"body1\"\r\n                sx={{ color: \"text.secondary\", ml: 2 }}\r\n              >\r\n                No series found.\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n\r\n          {/* Delete Confirmation Dialog */}\r\n          <Dialog\r\n            open={deleteDialog.open}\r\n            onClose={closeDeleteDialog}\r\n            aria-labelledby=\"delete-dialog-title\"\r\n            aria-describedby=\"delete-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"delete-dialog-title\">Confirm Deletion</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"delete-dialog-description\">\r\n                Are you sure you want to delete \"{deleteDialog.title}\"? This\r\n                action cannot be undone.\r\n                {deleteDialog.type === \"media\" &&\r\n                  \" This will also delete all associated seasons and episodes.\"}\r\n                {deleteDialog.type === \"season\" &&\r\n                  \" This will also delete all episodes in this season.\"}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={closeDeleteDialog} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={handleDelete}\r\n                color=\"error\"\r\n                variant=\"contained\"\r\n                autoFocus\r\n              >\r\n                Delete\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Box>\r\n      </Fade>\r\n    </Box>\r\n  );\r\n}\r\n","__webpack_require__.h = () => (\"21e6677f1df4b8c893bd\")"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","next","push","isArray","React","useState","useEffect","useContext","Box","Typography","Grid","Button","CircularProgress","Fade","Accordion","AccordionSummary","AccordionDetails","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Delete","ExpandMore","axiosInstance","UserContext","MovieCard","ManageMedia","_useContext","userId","role","_useState","_useState2","mediaItems","setMediaItems","_useState3","_useState4","seriesDetails","setSeriesDetails","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","_useState9","open","type","id","title","_useState0","deleteDialog","setDeleteDialog","fetchMedia","_ref","_callee","response","_series","detailsPromises","detailsResponses","detailsMap","_err$response","_t","_context","get","data","series","filter","item","_item$type","toLowerCase","map","params","mediaId","all","forEach","res","index","handleDelete","_ref2","_callee2","_series2","_err$response2","_t2","_context2","post","concat","_item$type2","openDeleteDialog","closeDeleteDialog","createElement","timeout","sx","display","flexDirection","alignItems","justifyContent","minHeight","bgcolor","color","mb","variant","fontWeight","border","borderRadius","textAlign","maxWidth","mx","movies","_item$type3","_item$type4","py","xs","sm","px","md","letterSpacing","container","spacing","lg","key","position","description","posterUrl","thumbnailPath","trailerUrl","trailerPath","top","right","onClick","ml","_seriesDetails$item$m","seasons","expandIcon","season","seasonId","flexGrow","seasonNumber","episodes","episode","episodeId","overflow","textOverflow","episodeNumber","onClose","autoFocus"],"sourceRoot":""}