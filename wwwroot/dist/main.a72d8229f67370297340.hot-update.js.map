{"version":3,"file":"main.a72d8229f67370297340.hot-update.js","mappings":"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","sources":["webpack://mediaserver/./wwwroot/source/screens/home/Auth.jsx","webpack://mediaserver/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Alert,\r\n  Typography,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  createTheme,\r\n  ThemeProvider,\r\n  Paper,\r\n  Divider,\r\n  Fade,\r\n} from \"@mui/material\";\r\nimport {\r\n  Email as EmailIcon,\r\n  Lock as LockIcon,\r\n  Person as PersonIcon,\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n} from \"@mui/icons-material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { UserContext } from \"../../UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// ... (theme and other imports remain unchanged)\r\n\r\nconst Auth = () => {\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [showLoginPassword, setShowLoginPassword] = useState(false);\r\n  const [showRegisterPassword, setShowRegisterPassword] = useState(false);\r\n  const [alert, setAlert] = useState({ message: \"\", severity: \"\" });\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const { setUserType, setToken, setUsername, setUserId } =\r\n    useContext(UserContext);\r\n\r\n  const navigate = useNavigate();\r\n  const {\r\n    register: registerLogin,\r\n    handleSubmit: handleLoginSubmit,\r\n    formState: { errors: loginErrors },\r\n    reset: resetLogin,\r\n  } = useForm();\r\n\r\n  const {\r\n    register: registerSignup,\r\n    handleSubmit: handleSignupSubmit,\r\n    formState: { errors: signupErrors },\r\n    reset: resetSignup,\r\n    setError,\r\n  } = useForm();\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setAlert({ message: \"\", severity: \"\" });\r\n    resetLogin();\r\n    resetSignup();\r\n    setShowLoginPassword(false);\r\n    setShowRegisterPassword(false);\r\n  };\r\n\r\n  // ... (backend validation and submission handlers remain unchanged)\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Box\r\n        sx={{\r\n          minHeight: \"100vh\",\r\n          background:\r\n            \"linear-gradient(135deg, #0F0F23 0%, #1A1A2E 50%, #16213E 100%)\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          py: 4,\r\n          position: \"relative\",\r\n          overflow: \"hidden\",\r\n          \"::before\": {\r\n            content: '\"\"',\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            background:\r\n              \"radial-gradient(circle at 20% 80%, rgba(99, 102, 241, 0.1) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(16, 185, 129, 0.1) 0%, transparent 50%)\",\r\n            zIndex: 0,\r\n          },\r\n        }}\r\n      >\r\n        <Container\r\n          component=\"main\"\r\n          maxWidth=\"sm\"\r\n          sx={{ position: \"relative\", zIndex: 1 }}\r\n        >\r\n          <Fade in timeout={600}>\r\n            <Card\r\n              variant=\"outlined\"\r\n              sx={{ p: { xs: 3, sm: 4 }, transition: \"all 0.4s ease\" }}\r\n            >\r\n              <CardContent sx={{ pb: 0 }}>\r\n                <Box sx={{ display: \"flex\", justifyContent: \"center\", mb: 4 }}>\r\n                  <Tabs\r\n                    value={tabValue}\r\n                    onChange={handleTabChange}\r\n                    centered\r\n                    variant=\"fullWidth\"\r\n                    sx={{ maxWidth: \"300px\" }}\r\n                  >\r\n                    <Tab label=\"Sign In\" />\r\n                    <Tab label=\"Sign Up\" />\r\n                  </Tabs>\r\n                </Box>\r\n                <Divider sx={{ my: 2, backgroundColor: \"divider\" }} />\r\n\r\n                {alert.message && (\r\n                  <Fade in={!!alert.message} timeout={300}>\r\n                    <Alert\r\n                      severity={alert.severity}\r\n                      sx={{ mt: 1, mb: 3, transition: \"all 0.3s ease\" }}\r\n                      onClose={() => setAlert({ message: \"\", severity: \"\" })}\r\n                    >\r\n                      {alert.message}\r\n                    </Alert>\r\n                  </Fade>\r\n                )}\r\n\r\n                {/* Login Form */}\r\n                {tabValue === 0 && (\r\n                  <Fade in={tabValue === 0} timeout={400}>\r\n                    <Box\r\n                      component=\"form\"\r\n                      onSubmit={handleLoginSubmit(onLoginSubmit)}\r\n                      sx={{\r\n                        mt: 1,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        gap: 3,\r\n                      }}\r\n                    >\r\n                      <Box sx={{ textAlign: \"center\", mb: 1 }}>\r\n                        <Typography variant=\"h5\">Welcome Back</Typography>\r\n                        <Typography variant=\"h6\">\r\n                          Enter your credentials\r\n                        </Typography>\r\n                      </Box>\r\n\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email Address\"\r\n                        autoComplete=\"email\"\r\n                        {...registerLogin(\"email\", {\r\n                          required: \"Email is required\",\r\n                          pattern: {\r\n                            value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                            message: \"Enter a valid email address\",\r\n                          },\r\n                        })}\r\n                        error={!!loginErrors.email}\r\n                        helperText={loginErrors.email?.message}\r\n                        InputProps={{\r\n                          startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                              <EmailIcon sx={{ color: \"text.secondary\" }} />\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n\r\n                      <TextField\r\n                        fullWidth\r\n                        type={showLoginPassword ? \"text\" : \"password\"}\r\n                        label=\"Password\"\r\n                        autoComplete=\"current-password\"\r\n                        {...registerLogin(\"password\", {\r\n                          required: \"Password is required\",\r\n                          minLength: {\r\n                            value: 6,\r\n                            message: \"Password must be at least 6 characters\",\r\n                          },\r\n                        })}\r\n                        error={!!loginErrors.password}\r\n                        helperText={loginErrors.password?.message}\r\n                        InputProps={{\r\n                          startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                              <LockIcon sx={{ color: \"text.secondary\" }} />\r\n                            </InputAdornment>\r\n                          ),\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                onClick={() =>\r\n                                  setShowLoginPassword(!showLoginPassword)\r\n                                }\r\n                                edge=\"end\"\r\n                                sx={{ color: \"text.secondary\" }}\r\n                              >\r\n                                {showLoginPassword ? (\r\n                                  <VisibilityOffIcon />\r\n                                ) : (\r\n                                  <VisibilityIcon />\r\n                                )}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={rememberMe}\r\n                            onChange={(e) => setRememberMe(e.target.checked)}\r\n                          />\r\n                        }\r\n                        label=\"Remember me\"\r\n                      />\r\n\r\n                      <Button\r\n                        fullWidth\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        sx={{\r\n                          background:\r\n                            \"linear-gradient(135deg, primary.main 0%, secondary.main 100%)\",\r\n                          boxShadow: \"0 4px 14px 0 rgba(99, 102, 241, 0.4)\",\r\n                          \"&:hover\": {\r\n                            background:\r\n                              \"linear-gradient(135deg, primary.light 0%, secondary.main 100%)\",\r\n                            boxShadow: \"0 8px 25px 0 rgba(99, 102, 241, 0.5)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        Sign In\r\n                      </Button>\r\n                    </Box>\r\n                  </Fade>\r\n                )}\r\n\r\n                {/* Register Form */}\r\n                {tabValue === 1 && (\r\n                  <Fade in={tabValue === 1} timeout={400}>\r\n                    <Box\r\n                      component=\"form\"\r\n                      onSubmit={handleSignupSubmit(onRegisterSubmit)}\r\n                      sx={{\r\n                        mt: 1,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        gap: 3,\r\n                      }}\r\n                    >\r\n                      <Box sx={{ textAlign: \"center\", mb: 1 }}>\r\n                        <Typography variant=\"h5\">Create Account</Typography>\r\n                        <Typography variant=\"h6\">Join us today</Typography>\r\n                      </Box>\r\n\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Username\"\r\n                        autoComplete=\"username\"\r\n                        {...registerSignup(\"username\", {\r\n                          required: \"Username is required\",\r\n                          minLength: {\r\n                            value: 2,\r\n                            message: \"Username must be at least 2 characters\",\r\n                          },\r\n                        })}\r\n                        error={!!signupErrors.username}\r\n                        helperText={signupErrors.username?.message}\r\n                        InputProps={{\r\n                          startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                              <PersonIcon sx={{ color: \"text.secondary\" }} />\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email Address\"\r\n                        autoComplete=\"email\"\r\n                        {...registerSignup(\"email\", {\r\n                          required: \"Email is required\",\r\n                          pattern: {\r\n                            value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                            message: \"Enter a valid email address\",\r\n                          },\r\n                        })}\r\n                        error={!!signupErrors.email}\r\n                        helperText={signupErrors.email?.message}\r\n                        InputProps={{\r\n                          startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                              <EmailIcon sx={{ color: \"text.secondary\" }} />\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n\r\n                      <TextField\r\n                        fullWidth\r\n                        type={showRegisterPassword ? \"text\" : \"password\"}\r\n                        label=\"Password\"\r\n                        autoComplete=\"new-password\"\r\n                        {...registerSignup(\"password\", {\r\n                          required: \"Password is required\",\r\n                          minLength: {\r\n                            value: 6,\r\n                            message: \"Password must be at least 6 characters\",\r\n                          },\r\n                        })}\r\n                        error={!!signupErrors.password}\r\n                        helperText={signupErrors.password?.message}\r\n                        InputProps={{\r\n                          startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                              <LockIcon sx={{ color: \"text.secondary\" }} />\r\n                            </InputAdornment>\r\n                          ),\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                onClick={() =>\r\n                                  setShowRegisterPassword(!showRegisterPassword)\r\n                                }\r\n                                edge=\"end\"\r\n                                sx={{ color: \"text.secondary\" }}\r\n                              >\r\n                                {showRegisterPassword ? (\r\n                                  <VisibilityOffIcon />\r\n                                ) : (\r\n                                  <VisibilityIcon />\r\n                                )}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n\r\n                      <TextField\r\n                        fullWidth\r\n                        type={showRegisterPassword ? \"text\" : \"password\"}\r\n                        label=\"Confirm Password\"\r\n                        autoComplete=\"new-password\"\r\n                        {...registerSignup(\"confirmPassword\", {\r\n                          required: \"Confirm password is required\",\r\n                          validate: (value, formValues) =>\r\n                            value === formValues.password ||\r\n                            \"Passwords do not match\",\r\n                        })}\r\n                        error={!!signupErrors.confirmPassword}\r\n                        helperText={signupErrors.confirmPassword?.message}\r\n                        InputProps={{\r\n                          startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                              <LockIcon sx={{ color: \"text.secondary\" }} />\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n\r\n                      <Button\r\n                        fullWidth\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        sx={{\r\n                          background:\r\n                            \"linear-gradient(135deg, primary.main 0%, secondary.main 100%)\",\r\n                          boxShadow: \"0 4px 14px 0 rgba(99, 102, 241, 0.4)\",\r\n                          \"&:hover\": {\r\n                            background:\r\n                              \"linear-gradient(135deg, primary.light 0%, secondary.main 100%)\",\r\n                            boxShadow: \"0 8px 25px 0 rgba(99, 102, 241, 0.5)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        Sign Up\r\n                      </Button>\r\n                    </Box>\r\n                  </Fade>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Fade>\r\n        </Container>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","__webpack_require__.h = () => (\"beab8b1fad1ddb6500f9\")"],"names":["React","useContext","useState","Container","Card","CardContent","Tabs","Tab","Box","TextField","Button","Alert","Typography","IconButton","InputAdornment","FormControlLabel","Checkbox","createTheme","ThemeProvider","Paper","Divider","Fade","Email","EmailIcon","Lock","LockIcon","Person","PersonIcon","Visibility","VisibilityIcon","VisibilityOff","VisibilityOffIcon","useForm","UserContext","useNavigate","Auth","_loginErrors$email","_loginErrors$password","_signupErrors$usernam","_signupErrors$email","_signupErrors$passwor","_signupErrors$confirm","_useState","_useState2","_slicedToArray","tabValue","setTabValue","_useState3","_useState4","showLoginPassword","setShowLoginPassword","_useState5","_useState6","showRegisterPassword","setShowRegisterPassword","_useState7","message","severity","_useState8","alert","setAlert","_useState9","_useState0","rememberMe","setRememberMe","_useContext","setUserType","setToken","setUsername","setUserId","navigate","_useForm","registerLogin","register","handleLoginSubmit","handleSubmit","loginErrors","formState","errors","resetLogin","reset","_useForm2","registerSignup","handleSignupSubmit","signupErrors","resetSignup","setError","handleTabChange","event","newValue","createElement","theme","darkTheme","sx","minHeight","background","display","alignItems","justifyContent","py","position","overflow","content","top","left","right","bottom","zIndex","component","maxWidth","timeout","variant","p","xs","sm","transition","pb","mb","value","onChange","centered","label","my","backgroundColor","mt","onClose","onSubmit","onLoginSubmit","flexDirection","gap","textAlign","_extends","fullWidth","autoComplete","required","pattern","error","email","helperText","InputProps","startAdornment","color","type","minLength","password","endAdornment","onClick","edge","control","checked","e","target","size","boxShadow","onRegisterSubmit","username","validate","formValues","confirmPassword"],"sourceRoot":""}